name: Release

on:
  workflow_call:
    inputs:
      path:
        description: 'Path to the changelog file'
        required: false
        default: 'CHANGELOG.md'
        type: string
      mutable:
        description: 'Whether mutable tags should be updated or not'
        required: false
        default: 'true'
        type: string
    outputs:
      url:
        description: 'The URL of the release'
        value: ${{ jobs.publish.outputs.url }}
      tag:
        description: 'The tag of the release'
        value: ${{ jobs.publish.outputs.tag }}
      tags:
        description: 'The tags of the release'
        value: ${{ jobs.publish.outputs.tags }}
      body:
        description: 'The body of the release'
        value: ${{ jobs.publish.outputs.body }}
      previous_comment_id:
        description: 'The ID of the previous comment'
        value: ${{ jobs.publish.outputs.previous_comment_id }}
      created_comment_id:
        description: 'The ID of the created comment'
        value: ${{ jobs.publish.outputs.created_comment_id }}

permissions:
  contents: write
  pull-requests: write

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.release.outputs.url }}
      tag: ${{ steps.release.outputs.tag }}
      tags: ${{ steps.release.outputs.tags }}
      body: ${{ steps.release.outputs.body }}
      previous_comment_id: ${{ steps.comment.outputs.previous_comment_id }}
      created_comment_id: ${{ steps.comment.outputs.created_comment_id }}
    steps:
      - id: reusable-workflow
        uses: ipdxco/reusable-workflow-context@e0cb8a05f123873388b5079c96acfe236f59a870
        with:
          path: ipdxco/changelog-driven-release/.github/workflows/pr.yml
      - uses: actions/checkout@v3
        with:
          repository: ipdxco/changelog-driven-release
          path: changelog-driven-release
          ref: ${{ steps.reusable-workflow.outputs.sha }}
      - id: release
        uses: ./changelog-driven-release
        with:
          path: ${{ inputs.path }}
          draft: ${{ github.event_name == 'pull_request' || github.event.inputs.draft == 'true' }}
          mutable: ${{ github.event.inputs.mutable == 'true' }}
      - id: comment
        if: github.event_name == 'pull_request' && steps.release.outputs.tag != ''
        uses: marocchino/sticky-pull-request-comment@52423e01640425a022ef5fd42c6fb5f633a02728 # v2.9.1
        with:
          header: release
          recreate: true
          message: |
            ## [${{ steps.release.outputs.tag }}](${{ steps.release.outputs.url }})

            ${{ steps.release.outputs.body }}
